// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// CalcScaleDistMats
List CalcScaleDistMats(List A_List, NumericMatrix coords);
RcppExport SEXP _GPFDA_CalcScaleDistMats(SEXP A_ListSEXP, SEXP coordsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type A_List(A_ListSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type coords(coordsSEXP);
    rcpp_result_gen = Rcpp::wrap(CalcScaleDistMats(A_List, coords));
    return rcpp_result_gen;
END_RCPP
}
// CalcScaleDistMatsAsym
List CalcScaleDistMatsAsym(List A_List, List Astar_List, NumericMatrix coords, NumericMatrix coordsStar);
RcppExport SEXP _GPFDA_CalcScaleDistMatsAsym(SEXP A_ListSEXP, SEXP Astar_ListSEXP, SEXP coordsSEXP, SEXP coordsStarSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type A_List(A_ListSEXP);
    Rcpp::traits::input_parameter< List >::type Astar_List(Astar_ListSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type coords(coordsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type coordsStar(coordsStarSEXP);
    rcpp_result_gen = Rcpp::wrap(CalcScaleDistMatsAsym(A_List, Astar_List, coords, coordsStar));
    return rcpp_result_gen;
END_RCPP
}
// CovMaternCpp
arma::mat CovMaternCpp(NumericMatrix input, NumericMatrix inputNew, NumericVector cc, NumericMatrix A, NumericVector nu);
RcppExport SEXP _GPFDA_CovMaternCpp(SEXP inputSEXP, SEXP inputNewSEXP, SEXP ccSEXP, SEXP ASEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type input(inputSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inputNew(inputNewSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cc(ccSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(CovMaternCpp(input, inputNew, cc, A, nu));
    return rcpp_result_gen;
END_RCPP
}
// CovMaternCpp_sq
arma::mat CovMaternCpp_sq(NumericMatrix input, NumericVector cc, NumericMatrix A, NumericVector nu);
RcppExport SEXP _GPFDA_CovMaternCpp_sq(SEXP inputSEXP, SEXP ccSEXP, SEXP ASEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type input(inputSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cc(ccSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(CovMaternCpp_sq(input, cc, A, nu));
    return rcpp_result_gen;
END_RCPP
}
// DistMat
arma::mat DistMat(NumericMatrix input, NumericMatrix inputNew, NumericMatrix A, NumericVector power);
RcppExport SEXP _GPFDA_DistMat(SEXP inputSEXP, SEXP inputNewSEXP, SEXP ASEXP, SEXP powerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type input(inputSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inputNew(inputNewSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type power(powerSEXP);
    rcpp_result_gen = Rcpp::wrap(DistMat(input, inputNew, A, power));
    return rcpp_result_gen;
END_RCPP
}
// DistMat_sq
arma::mat DistMat_sq(NumericMatrix input, NumericMatrix A, NumericVector power);
RcppExport SEXP _GPFDA_DistMat_sq(SEXP inputSEXP, SEXP ASEXP, SEXP powerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type input(inputSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type power(powerSEXP);
    rcpp_result_gen = Rcpp::wrap(DistMat_sq(input, A, power));
    return rcpp_result_gen;
END_RCPP
}
// DistMatLinear
arma::mat DistMatLinear(NumericMatrix input, NumericMatrix inputNew, NumericMatrix A);
RcppExport SEXP _GPFDA_DistMatLinear(SEXP inputSEXP, SEXP inputNewSEXP, SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type input(inputSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inputNew(inputNewSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(DistMatLinear(input, inputNew, A));
    return rcpp_result_gen;
END_RCPP
}
// DistMatLinear_sq
arma::mat DistMatLinear_sq(NumericMatrix input, NumericMatrix A);
RcppExport SEXP _GPFDA_DistMatLinear_sq(SEXP inputSEXP, SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type input(inputSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(DistMatLinear_sq(input, A));
    return rcpp_result_gen;
END_RCPP
}
// KCGP
arma::mat KCGP(NumericMatrix X, NumericVector idx, NumericVector va0s, NumericVector va1s, List A0s, List A1s, NumericVector sig);
RcppExport SEXP _GPFDA_KCGP(SEXP XSEXP, SEXP idxSEXP, SEXP va0sSEXP, SEXP va1sSEXP, SEXP A0sSEXP, SEXP A1sSEXP, SEXP sigSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type idx(idxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type va0s(va0sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type va1s(va1sSEXP);
    Rcpp::traits::input_parameter< List >::type A0s(A0sSEXP);
    Rcpp::traits::input_parameter< List >::type A1s(A1sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sig(sigSEXP);
    rcpp_result_gen = Rcpp::wrap(KCGP(X, idx, va0s, va1s, A0s, A1s, sig));
    return rcpp_result_gen;
END_RCPP
}
// KCGPnm
arma::mat KCGPnm(NumericMatrix X, NumericMatrix Xp, NumericVector idx, NumericVector idx_new, NumericVector va0s, NumericVector va1s, List A0s, List A1s, NumericVector sig);
RcppExport SEXP _GPFDA_KCGPnm(SEXP XSEXP, SEXP XpSEXP, SEXP idxSEXP, SEXP idx_newSEXP, SEXP va0sSEXP, SEXP va1sSEXP, SEXP A0sSEXP, SEXP A1sSEXP, SEXP sigSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xp(XpSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type idx(idxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type idx_new(idx_newSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type va0s(va0sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type va1s(va1sSEXP);
    Rcpp::traits::input_parameter< List >::type A0s(A0sSEXP);
    Rcpp::traits::input_parameter< List >::type A1s(A1sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sig(sigSEXP);
    rcpp_result_gen = Rcpp::wrap(KCGPnm(X, Xp, idx, idx_new, va0s, va1s, A0s, A1s, sig));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_GPFDA_CalcScaleDistMats", (DL_FUNC) &_GPFDA_CalcScaleDistMats, 2},
    {"_GPFDA_CalcScaleDistMatsAsym", (DL_FUNC) &_GPFDA_CalcScaleDistMatsAsym, 4},
    {"_GPFDA_CovMaternCpp", (DL_FUNC) &_GPFDA_CovMaternCpp, 5},
    {"_GPFDA_CovMaternCpp_sq", (DL_FUNC) &_GPFDA_CovMaternCpp_sq, 4},
    {"_GPFDA_DistMat", (DL_FUNC) &_GPFDA_DistMat, 4},
    {"_GPFDA_DistMat_sq", (DL_FUNC) &_GPFDA_DistMat_sq, 3},
    {"_GPFDA_DistMatLinear", (DL_FUNC) &_GPFDA_DistMatLinear, 3},
    {"_GPFDA_DistMatLinear_sq", (DL_FUNC) &_GPFDA_DistMatLinear_sq, 2},
    {"_GPFDA_KCGP", (DL_FUNC) &_GPFDA_KCGP, 7},
    {"_GPFDA_KCGPnm", (DL_FUNC) &_GPFDA_KCGPnm, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_GPFDA(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
